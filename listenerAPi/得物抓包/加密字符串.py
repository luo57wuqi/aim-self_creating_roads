import base64

# 将你的编码字符串粘贴到这里（注意用三引号包裹长字符串）
encoded_str = """"""


# ===== 修复：补全 Base64 填充符 `=` =====
encoded_str = encoded_str.replace('\n', '').replace(' ', '')  # 移除换行和空格
padding_needed = (4 - len(encoded_str) % 4) % 4  # 计算需要补充的 `=` 数量
encoded_str += '=' * padding_needed  # 补充 `=`

# ===== 尝试解码 =====
try:
    decoded_bytes = base64.b64decode(encoded_str)
    # 尝试转换为文本（若失败则保存为二进制文件）
    try:
        decoded_text = decoded_bytes.decode('utf-8')
        print("解码成功（文本）：\n", decoded_text[:1000])  # 打印前1000字符
    except UnicodeDecodeError:
        with open('decoded_data.bin', 'wb') as f:
            f.write(decoded_bytes)
        print(f"解码成功（二进制数据），已保存至 decoded_data.bin，大小：{len(decoded_bytes)} 字节")
except Exception as e:
    print("解码失败：", str(e))
